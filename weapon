-- Print message BEFORE spawning a separate thread
print("Weapon module initialized")

local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function getBossHRP()
    local entities = workspace:FindFirstChild("Entities")
    if not entities then return nil end

    for _, entity in ipairs(entities:GetChildren()) do
        if not Players:GetPlayerFromCharacter(entity) then
            local hrp = entity:FindFirstChild("HumanoidRootPart")
            if hrp then
                return hrp
            end
        end
    end
    return nil
end

local function autoEquipWeapon()
    while true do
        local bossHRP = getBossHRP()
        if bossHRP then
            local playerEntity = workspace.Entities:FindFirstChild(player.Name)
            local toggle = playerEntity and playerEntity:FindFirstChild("Toggle")
            local race = playerEntity and playerEntity:FindFirstChild("Race")

            if toggle and toggle.Value == false and race and race.Value then
                local args

                if race.Value == "Human" then
                    args = {
                        [1] = {
                            [1] = {
                                ["Module"] = "Toggle",
                                ["IsHolding"] = false
                            },
                            [2] = "\5"
                        }
                    }
                elseif race.Value == "Ghoul" then
                    args = {
                        [1] = {
                            [1] = {
                                ["Module"] = "Toggle",
                                ["IsHolding"] = true
                            },
                            [2] = "\5"
                        }
                    }
                end

                if args then
                    game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
                end
            end
        end
        task.wait(1) -- Checks every 1 second
    end
end

-- Start auto-equipping
task.spawn(autoEquipWeapon)
