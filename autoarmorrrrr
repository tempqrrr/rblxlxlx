local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")

local localPlayer = Players.LocalPlayer
local name = localPlayer.Name
local connection = nil
local isChecking = false
local isTeleporting = false

-- Desync
local desyncEnabled = false
local VOID_POSITION = Vector3.new(-435, -22, 23)
local realCFrame
local realVelocity

-- Notify
local function notify(title, text)
    StarterGui:SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = 2
    })
end

-- Desync loop
RunService.Heartbeat:Connect(function()
    if desyncEnabled and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = localPlayer.Character.HumanoidRootPart
        realCFrame = hrp.CFrame
        realVelocity = hrp.AssemblyLinearVelocity

        hrp.CFrame = CFrame.new(VOID_POSITION)
        hrp.AssemblyLinearVelocity = Vector3.new(0, 0, 0)

        RunService.RenderStepped:Wait()

        hrp.CFrame = realCFrame
        hrp.AssemblyLinearVelocity = realVelocity
    end
end)

-- Spoof query hook
local oldIndex
oldIndex = hookmetamethod(game, "__index", function(self, key)
    if desyncEnabled and not checkcaller() then
        if key == "CFrame" and self == localPlayer.Character.HumanoidRootPart then
            return realCFrame or self.CFrame
        elseif key == "AssemblyLinearVelocity" and self == localPlayer.Character.HumanoidRootPart then
            return realVelocity or self.AssemblyLinearVelocity
        end
    end
    return oldIndex(self, key)
end)

-- Try use burger once
local function tryUseHamburger()
    local backpack = localPlayer:FindFirstChild("Backpack")
    local character = localPlayer.Character
    if not backpack or not character then return false end

    for _, tool in ipairs(backpack:GetChildren()) do
        if tool:IsA("Tool") and tool.Name == "[Hamburger]" then
            tool.Parent = character
            task.wait(0.01)
            tool:Activate()
            task.wait(0.01)
            tool.Parent = backpack
            return true
        end
    end

    return false
end

-- Core AutoArmor function
local function ArmorTP()
    if isTeleporting then return end
    isTeleporting = true

    local playerFolder = workspace.Players:FindFirstChild(name)
    if not playerFolder then return warn("Player folder not found.") end

    local hrp = playerFolder:FindFirstChild("HumanoidRootPart")
    local armor = playerFolder:FindFirstChild("BodyEffects") and playerFolder.BodyEffects:FindFirstChild("Armor")
    if not hrp or not armor then return warn("Missing HRP or Armor") end

    local clickPart = workspace.Ignored.Shop:GetChildren()[28]
    local clickDetector = clickPart and clickPart:FindFirstChildOfClass("ClickDetector")
    if not clickDetector then return warn("No click detector found") end

    -- Save equipped tool
    local backpack = localPlayer:FindFirstChild("Backpack")
    local character = localPlayer.Character
    local equippedTool = nil
    if character then
        for _, tool in ipairs(character:GetChildren()) do
            if tool:IsA("Tool") then
                equippedTool = tool
                tool.Parent = backpack
                break
            end
        end
    end

    notify("AutoArmor", "Buying armor + checking food...")
    VOID_POSITION = Vector3.new(-435, -22, 23)
    desyncEnabled = true
    task.wait(0.1)

    -- Spam click armor for 0.6s
    local startTime = tick()
    while tick() - startTime < 0.6 do
        fireclickdetector(clickDetector)
        RunService.Heartbeat:Wait()
    end

    -- Try to use hamburger during armor desync
    local usedBurger = tryUseHamburger()

    -- End armor desync
    desyncEnabled = false
    task.wait(0.1)

    -- If no burger was used, desync to buy one
    if not usedBurger then
        VOID_POSITION = Vector3.new(-273, 23, -809) -- burger shop
        desyncEnabled = true
        task.wait(1)

        local shop = workspace.Ignored.Shop:FindFirstChild("[Hamburger] - $5")
        if shop then
            local detector = shop:FindFirstChildOfClass("ClickDetector")
            if detector then
                fireclickdetector(detector)
            end
        end

        desyncEnabled = false
        task.wait(0.1)
    end

    -- Restore tool
    if equippedTool and backpack then
        equippedTool.Parent = character
    end

    notify("AutoArmor", "Done.")
    isTeleporting = false
end

-- Auto check loop
local function Checker()
    if isTeleporting then return end

    local playerFolder = workspace.Players:FindFirstChild(name)
    if playerFolder and playerFolder:FindFirstChild("BodyEffects") then
        local armor = playerFolder.BodyEffects:FindFirstChild("Armor")
        if armor and armor.Value < 200 then
            ArmorTP()
        end
    end
end

-- Toggle auto check (K key)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.K then
        if isChecking then
            if connection then connection:Disconnect() end
            isChecking = false
            notify("AutoArmor", "Checker deactivated.")
        else
            connection = RunService.RenderStepped:Connect(Checker)
            isChecking = true
            notify("AutoArmor", "Checker activated.")
        end
    end
end)
