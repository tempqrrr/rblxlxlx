local remoteEvent = game.ReplicatedStorage:WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent")
local player = game.Players.LocalPlayer
local workspace = game:GetService("Workspace")

local toggled = true  -- Set this to `true` to start, `false` to stop

local args = {
    [1] = {
        [1] = {
            ["Module"] = "M1"
        },
        [2] = "\5"
    }
}

-- Function to check if the boss exists
local function getBossHRP()
    local entitiesFolder = workspace:FindFirstChild("Entities")
    if not entitiesFolder then return nil end

    for _, entity in ipairs(entitiesFolder:GetChildren()) do
        if not game.Players:GetPlayerFromCharacter(entity) then
            local hrp = entity:FindFirstChild("HumanoidRootPart")
            if hrp then
                return hrp
            end
        end
    end
    return nil
end

-- Function to keep sending M1 arguments
local function keepM1ing()
    while toggled do
        local bossHRP = getBossHRP()
        
        if bossHRP then
            -- Boss exists, fire the M1 input
            remoteEvent:FireServer(unpack(args))
        end

        wait(0.1)  -- Check every 0.1 seconds
    end
end

-- Execute the function to keep sending M1 when the boss exists
keepM1ing()
