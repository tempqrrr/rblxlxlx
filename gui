-- Local Config Variables
local bossAutoFarm = false
local bossInstakill = false
local frontDistance = 10 -- Adjustable front distance
local forcefieldCheckSpeed = 0.015 -- Forcefield check speed (seconds)
local retreatTime = 1 -- Time for retreat cooldown (seconds)
local instakillPercentage = 40 -- Percentage of health for Instakill trigger

-- Cooldown flags
local canTeleportToBoss = true
local canTeleportDown = true

-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Function to teleport and roll
local function teleportAndRoll(position, isToBoss)
    -- Teleport to the position (either boss or downward position)
    player.Character:SetPrimaryPartCFrame(CFrame.new(position))

    -- Wait 0.005 seconds
    task.wait(0.005)

    -- Spam the roll function every 0.001 seconds for 0.1 seconds
    local rollDuration = 0.1
    local startTime = tick()
    
    while tick() - startTime < rollDuration do
        -- Trigger the roll (assuming "Q" is the key for rolling)
        game:GetService("ReplicatedStorage"):WaitForChild("Bridgenet2Main"):WaitForChild("dataRemoteEvent"):FireServer({
            [1] = {
                [1] = {
                    ["Module"] = "Dash"
                },
                [2] = "\5"
            }
        })
        task.wait(0.001) -- 0.001-second delay between rolls
    end

    -- Set the cooldown for the teleportation action
    if isToBoss then
        canTeleportToBoss = false
        task.delay(1, function() canTeleportToBoss = true end)
    else
        canTeleportDown = false
        task.delay(1, function() canTeleportDown = true end)
    end
end

-- Function to handle ForceField Check and teleporting
local function handleForceFieldCheck()
    while bossAutoFarm do
        task.wait(forcefieldCheckSpeed)  -- Wait according to the specified speed

        local playerEntity = workspace.Entities:FindFirstChild(player.Name)
        if playerEntity then
            local forceField = playerEntity:FindFirstChild("ForceField")

            if forceField and canTeleportToBoss then
                -- If forcefield is on, teleport to boss
                local entitiesFolder = workspace:FindFirstChild("Entities")
                if not entitiesFolder then return end
                for _, entity in ipairs(entitiesFolder:GetChildren()) do
                    if not Players:GetPlayerFromCharacter(entity) then
                        local bossHRP = entity:FindFirstChild("HumanoidRootPart")
                        if bossHRP then
                            local targetPos = bossHRP.Position + (bossHRP.CFrame.LookVector * frontDistance)
                            teleportAndRoll(targetPos, true)
                        end
                    end
                end
            elseif not forceField and canTeleportDown then
                -- If forcefield is off, teleport down to Y = -999
                local character = player.Character
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local downwardPos = Vector3.new(hrp.Position.X, -999, hrp.Position.Z)
                    teleportAndRoll(downwardPos, false)
                end
            end
        end
    end
end

-- Function to handle Boss Instakill
local function tryStartInstakill()
    if not (bossAutoFarm and bossInstakill) then return end

    local entitiesFolder = workspace:FindFirstChild("Entities")
    if not entitiesFolder then
        warn("Entities folder not found")
        return
    end

    -- Wait for boss to spawn
    while #entitiesFolder:GetChildren() < 2 do
        task.wait(0.1)
    end

    print("Boss spawned for Instakill!")

    task.spawn(function()
        while bossAutoFarm and bossInstakill do
            for _, entity in ipairs(entitiesFolder:GetChildren()) do
                if not Players:GetPlayerFromCharacter(entity) then
                    local bossHumanoid = entity:FindFirstChildOfClass("Humanoid")
                    if bossHumanoid then
                        -- If boss health is less than instakillPercentage, set health to -1 (instakill)
                        if (bossHumanoid.Health / bossHumanoid.MaxHealth) * 100 < instakillPercentage then
                            bossHumanoid.Health = -1
                            print("Boss Instakilled!")
                            return
                        end
                    end
                end
            end
            task.wait(0.5)
        end
    end)
end

-- Function to handle Boss AutoFarm
local function BOSSAUTOFARM(toggleState)
    bossAutoFarm = toggleState
    if not bossAutoFarm then
        print("[DEBUG] Boss Auto-Farm DISABLED")
        return
    end

    print("[DEBUG] Boss Auto-Farm ENABLED")

    -- Wait for boss to spawn
    print("Waiting for boss...")
    local entitiesFolder = workspace:FindFirstChild("Entities")
    if not entitiesFolder then
        warn("Entities folder not found")
        return
    end
    while #entitiesFolder:GetChildren() < 2 do
        task.wait(0.1)
    end
    print("Boss spawned!")

    -- Execute scripts instantly
    coroutine.wrap(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/tempqrrr/rblxlxlx/refs/heads/main/weapon"))()
    end)()
    coroutine.wrap(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/tempqrrr/rblxlxlx/refs/heads/main/m1"))()
    end)()
    coroutine.wrap(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/tempqrrr/rblxlxlx/refs/heads/main/facer"))()
    end)()
    coroutine.wrap(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/tempqrrr/rblxlxlx/refs/heads/main/roller"))()
    end)()

    -- 1 second delay before starting auto-farm
    task.wait(1)

    -- Attempt Instakill if both toggles are active
    tryStartInstakill()

    -- Start checking for forcefield and teleporting
    task.spawn(handleForceFieldCheck)
    task.spawn(function()
        while bossAutoFarm and task.wait(1) do
            if not getBossHRP() then
                print("[DEBUG] Boss died")
                return
            end
        end
    end)

    player.CharacterAdded:Connect(function(character)
        task.wait(3)
        if bossAutoFarm then
            task.spawn(handleForceFieldCheck)
        end
    end)
end

-- Load Rayfield GUI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Fatman fanclub",
   LoadingTitle = "Exps for a shitty ass game",
   LoadingSubtitle = "by wad",
   Theme = "Amethyst",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "waadghoulre",
      FileName = "wadadadad"
   }
})

local BossTab = Window:CreateTab("Boss Autofarm", nil)
local Section = BossTab:CreateSection("Boss Toggle")

-- Boss AutoFarm Toggle
local ToggleAutoFarm = BossTab:CreateToggle({
   Name = "Boss Autofarm",
   CurrentValue = false,
   Flag = "Toggle1",
   Callback = function(Value)
       bossAutoFarm = Value
       BOSSAUTOFARM(Value)
   end,
})

-- Boss Instakill Toggle
local ToggleInstakill = BossTab:CreateToggle({
   Name = "Boss Instakill",
   CurrentValue = false,
   Flag = "Toggle2",
   Callback = function(Value)
       bossInstakill = Value
       if bossAutoFarm and bossInstakill then
           tryStartInstakill()
       end
   end,
})

-- Instakill % Input
BossTab:CreateInput({
   Name = "Instakill %",
   CurrentValue = tostring(instakillPercentage),
   PlaceholderText = "Enter % of boss to instakill at",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       instakillPercentage = tonumber(Text) or instakillPercentage
   end,
})

-- Distance Sliders
local Divider = BossTab:CreateDivider()
BossTab:CreateSection("Distance settings")

BossTab:CreateSlider({
   Name = "Boss Distance",
   Range = {-30, 30},
   Increment = 1,
   Suffix = "Studs",
   CurrentValue = frontDistance,
   Flag = "Slider1",
   Callback = function(Value)
       frontDistance = Value
   end,
})

-- Forcefield Settings Section
local Divider = BossTab:CreateDivider()
BossTab:CreateSection("Forcefield settings")

-- Forcefield Check Speed Input
BossTab:CreateInput({
   Name = "Forcefield Check Speed",
   CurrentValue = tostring(forcefieldCheckSpeed),
   PlaceholderText = "Enter speed",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
       forcefieldCheckSpeed = tonumber(Text) or forcefieldCheckSpeed
   end,
})
